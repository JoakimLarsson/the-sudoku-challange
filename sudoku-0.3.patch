--- sudoku-0.3/include/game.h	2005-08-13 01:43:45.000000000 +0200
+++ sudoku-0.3.NEW/include/game.h	2014-03-05 14:15:51.056760791 +0100
@@ -40,6 +40,7 @@
 	int calculate_cost();
 	int rotate( int initial_cost );
 	void dump_state( std::ostream& ostr );
+	void dump_board( char *cp );
 protected:
 	block3x3 blocks[BLOCKSIZE][BLOCKSIZE];
 	int mostx, mosty;
--- sudoku-0.3/src/game.cc	2005-08-13 01:44:05.000000000 +0200
+++ sudoku-0.3.NEW/src/game.cc	2014-03-05 14:20:53.832750070 +0100
@@ -21,7 +21,9 @@
  *  along with this program; if not, write to the Free Software
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
- #include "../include/game.h"
+#include <stdlib.h>
+#include <string.h>
+#include "../include/game.h"
  
  game::game()
  {
@@ -157,3 +159,17 @@
 	 }
 	 ostr /*<< "mostx = " << mostx << ", mosty = " << mosty*/ << std::endl;
  }
+
+// Added by Joakim Larsson for the Soduko Challange
+void game::dump_board(char *cp)
+{
+    int ix = 0;
+
+    for ( int y =0; y < BLOCKSIZE*BLOCKSIZE ; y++ )
+    {
+        for ( int x = 0; x < BLOCKSIZE*BLOCKSIZE; x++ )
+        {
+            *cp++ = blocks[ x / BLOCKSIZE ][ y / BLOCKSIZE ].val( x % BLOCKSIZE, y % BLOCKSIZE ) + '0';
+	}
+    }
+}
--- sudoku-0.3/src/main.cc	2005-08-13 02:11:29.000000000 +0200
+++ sudoku-0.3.NEW/src/main.cc	2014-03-05 14:19:45.248750940 +0100
@@ -24,6 +24,7 @@
 #include <iostream>
 #include <fstream>
 #include <sstream>
+#include <stdlib.h>
 #include "../include/game.h"
 
 bool isSaneXY( int val )
